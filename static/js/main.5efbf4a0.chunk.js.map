{"version":3,"sources":["routing/user/table.js","routing/user/index.js","routing/login/styled/input.js","routing/login/styled/button.js","routing/login/LoginFirstTime.js","config.js","cognito.js","services/auth.js","lib/hooks/useDialog.js","routing/login/signInPage.js","routing/login/signIn.js","routing/login/index.js","routing/admin/index.js","lib/enums/roles.js","routing/utils/getRole.js","routing/index.js","store/reducer.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","createData","name","calories","fat","carbs","protein","rows","useStyles","makeStyles","table","minWidth","CustomizedTables","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","align","TableBody","map","row","scope","User","style","paddingTop","Typography","variant","marginBottom","Input","styled","props","autoComplete","InputProps","inputProps","multiline","Button","LoginFirstTime","setNewPassword","onSubmit","values","password","confirm_password","close","initialValues","render","handleSubmit","noValidate","display","flexDirection","alignItems","marginTop","fontWeight","zIndex","type","placeholder","config","API_HOST","process","REACT_APP_API_HOST","AWS_USER_POOL_ID","AWS_CLIENT_ID","poolData","UserPoolId","ClientId","getModuleState","state","auth","slice","createSlice","initialState","isAuthenticated","accessToken","userProfile","userPoolId","clientId","username","reducers","login","payload","logout","actions","reducer","persistReducer","key","storage","storageSession","useDialog","resolveRef","useRef","useState","isOpen","setIsOpen","initialData","setInitialData","a","Promise","resolve","current","open","SignInPage","restorePassword","dispatch","useDispatch","error","setError","dd","CognitoUserPool","ss","authDetails","AuthenticationDetails","Username","Password","userPool","userData","Pool","user","CognitoUser","authenticateUser","onSuccess","data","authActions","getAccessToken","getJwtToken","onFailure","err","message","newPasswordRequired","userAttributes","email_verified","result","completeNewPasswordChallenge","console","log","SignIn","setIsRestorePassword","Content","src","alt","width","left","position","top","justifyContent","Login","path","Admin","userRoles","getRole","authState","currentUserRoles","isAdminRole","includes","Routing","useSelector","role","useMemo","combinedRootReducer","combineReducers","authReducer","rootReducer","toString","undefined","localStorage","removeItem","sessionStorage","clear","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","persistor","persistStore","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5efbf4a0.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#322e4e',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Liam', '700 Oak Street, Brockton MA 2301', '715-312-2497', 24, 'f'),\n  createData('Oliver', '42 Fairhaven Commons Way, Fairhaven MA 2719\\n', '847-368-5914', 37, 'm'),\n  createData('William', '677 Timpany Blvd, Gardner MA 1440\\n', '940-603-7099', 24, 'm'),\n  createData('Mia', '11 Jungle Road, Leominster MA 1453\\n', '703-767-1495', 67, 'f'),\n  createData('Henry', '830 Curran Memorial Hwy, North Adams MA 1247\\n', '201-779-4768', 49, 'm'),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  \n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Address</StyledTableCell>\n            <StyledTableCell align=\"right\">Phone</StyledTableCell>\n            <StyledTableCell align=\"right\">Age</StyledTableCell>\n            <StyledTableCell align=\"right\">Gender</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport Table from './table'\nimport {  Container as MuiContainer, Typography } from '@material-ui/core';\n\nconst User = () => {\n  return (\n    <div>\n      <MuiContainer style={{ paddingTop: '50px' }}>\n        <Typography  variant=\"h4\" color=\"textSecondary\" style={{marginBottom: '20px'}}>\n          Users\n        </Typography>\n      \n      \n      <Table/>\n      </MuiContainer>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { TextField as RffTextField } from 'mui-rff';\n\nconst Input = styled((props) => (\n  <RffTextField\n    variant='outlined'\n    autoComplete='off'\n    InputProps={{ className: 'formControl' }}\n    inputProps={{ className: 'input' }}\n    {...props}\n  />\n))`\n  width: 400px;\n  .formControl {\n    padding-top: ${(props) => props.multiline && '6px'};\n    padding-bottom: ${(props) => props.multiline && '6px'};\n    height: 50px;\n\n    margin-bottom: 40px;\n  }\n  .input {\n    background-color: #fff;\n\n    border-radius: 50px;\n    padding: 0 20px;\n    height: 46px;\n    display: flex;\n    flex: auto;\n    width: 400px;\n  }\n  fieldset {\n    border-radius: 50px;\n  }\n`;\nexport default Input;\n","import styled from 'styled-components';\nimport { Button as MuiButton } from '@material-ui/core';\nimport React from 'react';\n\nconst Button = styled((props) => (\n  <MuiButton color=\"primary\" variant=\"contained\" {...props} />\n))`\n  border-radius: 18px;\n  margin-bottom: 20px;\n  height: 50px;\n  width: 400px;\n  box-shadow: none;\n  text-transform: none;\n  font-weight: bold;\n  background: #322e4e;\n  \n  &:hover {\n    box-shadow: none;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport {Form} from 'react-final-form';\nimport {\n  Box as MuiBox,\n  Typography as MuiTypography,\n} from '@material-ui/core';\nimport Input from './styled/input';\nimport Button from './styled/button';\n\nfunction LoginFirstTime(props) {\n  const {setNewPassword} = props;\n  \n  const onSubmit = (values) => {\n    if (values.password !== values.confirm_password) {\n      return;\n    }\n    setNewPassword.close(values);\n  };\n  \n  return (\n    <Form\n      onSubmit={onSubmit}\n      initialValues={{confirm_password: '', password: ''}}\n      render={({handleSubmit}) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <MuiBox display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            \n            <MuiTypography\n              align=\"center\"\n              variant=\"h6\"\n              color=\"textSecondary\"\n              style={{marginTop: '40px', marginBottom: '40px', fontWeight: 'bold', color: '#322e4e', zIndex: 1}}\n            >\n              As it is the first time you log into your account,\n              <br/> please set a\n              password\n            </MuiTypography>\n            \n            <Input\n              type=\"password\" placeholder=\"Password\" name=\"password\"/>\n            <Input\n              type=\"password\"\n              placeholder=\"Confirm your password\"\n              name=\"confirm_password\"\n            />\n            \n            \n            <Button type=\"submit\">Sign in</Button>\n          </MuiBox>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default LoginFirstTime;\n","const config = {\n  API_HOST: process.env.REACT_APP_API_HOST,\n  AWS_USER_POOL_ID: process.env.REACT_APP_AWS_USER_POOL_ID,\n  AWS_CLIENT_ID: process.env.REACT_APP_AWS_CLIENT_ID\n};\n\nexport default config;","import {CognitoUserPool} from \"amazon-cognito-identity-js\";\n\nimport config from \"./config\";\n\nconst poolData = {\n  UserPoolId: config.AWS_USER_POOL_ID,\n  ClientId: config.AWS_CLIENT_ID\n}\n\nexport const getUserPool = () => new CognitoUserPool(poolData);","import { createSlice } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport storageSession from 'redux-persist/lib/storage/session';\n\nexport const getModuleState = (state) => state.auth;\n\nexport const selectors = {\n  isAuthenticated(state) {\n    const { isAuthenticated } = getModuleState(state);\n    return isAuthenticated;\n  },\n  getAccessToken(state) {\n    const { accessToken } = getModuleState(state);\n    return accessToken;\n  },\n  getUserProfile(state) {\n    const { userProfile } = getModuleState(state);\n    return userProfile;\n  },\n  getUserPoolIds(state) {\n    const { userPoolId, clientId } = getModuleState(state);\n    return { userPoolId, clientId };\n  },\n  // getWorkspace(state) {\n  //   const { workspace } = getModuleState(state);\n  //\n  //   return workspace;\n  // },\n};\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false,\n    accessToken: null,\n    userProfile: {},\n    // workspace: null,\n    userPoolId: null,\n    clientId: null,\n    username: null,\n  },\n  reducers: {\n    login(state, { payload }) {\n      const {\n        username,\n        userProfile,\n        accessToken,\n      } = payload;\n      \n      state.isAuthenticated = true;\n      state.accessToken = accessToken;\n      state.userProfile = userProfile;\n      state.username = username;\n    },\n    logout(state) {\n      // just to generate action creator, see rootReducer - it resets the whole state\n    },\n    // setWorkspace(state, { payload }) {\n    //   const { workspace, userPoolId, clientId } = payload;\n    //\n    //   // state.workspace = workspace;\n    //   state.userPoolId = userPoolId;\n    //   state.clientId = clientId;\n    // },\n  },\n});\n\nexport const actions = slice.actions;\nexport const reducer = persistReducer(\n  {\n    key: 'auth',\n    storage: storageSession,\n  },\n  slice.reducer\n);\n","import { useRef, useState } from 'react';\n\nfunction useDialog() {\n  const resolveRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n  \n  async function open(initialData) {\n    setInitialData(initialData);\n    setIsOpen(true);\n    return new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }\n  \n  function close(payload) {\n    setInitialData(null);\n    setIsOpen(false);\n    resolveRef.current && resolveRef.current(payload);\n  }\n  \n  return { isOpen, initialData, open, close };\n}\n\nexport default useDialog;","import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {CognitoUser, AuthenticationDetails, CognitoUserPool} from 'amazon-cognito-identity-js';\nimport {Form} from 'react-final-form';\nimport Input from './styled/input';\nimport Button from './styled/button';\nimport {\n  Typography as MuiTypography,\n  Box as MuiBox,\n} from '@material-ui/core';\nimport LoginFirstTime from './LoginFirstTime';\n\nimport {getUserPool} from 'cognito.js';\nimport {\n  actions as authActions,\n} from 'services/auth';\nimport useDialog from 'lib/hooks/useDialog';\n\n\nfunction SignInPage(props) {\n  const {restorePassword} = props;\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const setNewPassword = useDialog();\n  \n  function onSubmit(values) {\n    const dd = getUserPool();\n   \n    const ss = {ClientId: dd.clientId, UserPoolId: dd.userPoolId};\n\n    \n    const authDetails = new AuthenticationDetails({\n      Username: values.username,\n      Password: values.password,\n    });\n  \n    const userPool = new CognitoUserPool(ss);\n    const userData = {\n      Username: values.username,\n      Pool: userPool,\n    };\n    const user = new CognitoUser(userData);\n    \n    user.authenticateUser(authDetails, {\n      onSuccess: async (data) => {\n        //TODO remove post when back is connected\n\n        dispatch(\n          authActions.login({\n            username: values.username,\n            userProfile: data.getAccessToken().payload,\n            accessToken: data.getAccessToken().getJwtToken(),\n          })\n        );\n      },\n      onFailure: (err) => {\n        setError(err.message);\n      },\n      newPasswordRequired: async (userAttributes, data) => {\n        delete userAttributes.email_verified;\n        \n        const result = await setNewPassword.open(userAttributes);\n        \n        user.completeNewPasswordChallenge(result.password, userAttributes, {\n          onSuccess: (data) => {\n            dispatch(\n              authActions.login({\n                username: values.username,\n                userProfile: data.getAccessToken().payload,\n                accessToken: data.getAccessToken().getJwtToken(),\n              })\n            );\n          },\n          onFailure: (err) => {\n            console.log('Set new password failed', err);\n          },\n        });\n      },\n    });\n  }\n  \n  return setNewPassword.isOpen ? (\n    <LoginFirstTime setNewPassword={setNewPassword} />\n  ) : (<Form\n      onSubmit={onSubmit}\n      initialValues={{username: '', password: ''}}\n      render={({handleSubmit}) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <MuiBox display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <MuiTypography\n              style={{marginTop: '40px', marginBottom: '40px',  fontWeight: 'bold', color: '#322e4e', zIndex: 1}}\n              variant=\"h5\"\n              align=\"center\"\n            >\n              Sign in\n            </MuiTypography>\n            \n            {error && (\n              <MuiTypography\n                align=\"center\"\n                color=\"error\"\n                style={{marginBottom: '48px'}}\n              >\n                {error}\n              </MuiTypography>\n            )}\n            <Input  placeholder=\"Email or phone number\" name=\"username\"/>\n            <Input type=\"password\" placeholder=\"Password\" name=\"password\"/>\n            <Button type=\"submit\">Sign in</Button>\n          </MuiBox>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default SignInPage;\n","import React, { useState } from 'react';\nimport {  Container as MuiContainer, Typography } from '@material-ui/core';\n\nimport SignInPage from './signInPage';\n\nfunction SignIn() {\n  const [ setIsRestorePassword] = useState(false);\n  \n  const Content = () => {\n\n    return <SignInPage restorePassword={() => setIsRestorePassword(true)} />;\n  };\n  \n  return (\n    <>\n      <Typography variant=\"subtitle\" color=\"textSecondary\">\n        Version 0.1\n      </Typography>\n      \n      <MuiContainer style={{ paddingTop: '155px' }}>\n        <img src=\"2.jpg\" alt=\"\" style={{width: '30%', left: \"10%\", position: 'fixed', top: '10%'}}/>\n        <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <Content />\n        </div>\n   \n      </MuiContainer>\n    </>\n  );\n}\n\nexport default SignIn;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport SignIn from './signIn';\n\nfunction Login() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <SignIn />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Login;","import React from 'react';\n\nconst Admin = () => {\n  return (\n    <div>\n      Admin\n    </div>\n  );\n};\n\nexport default Admin;","export const userRoles = {\n  admin: 'admin',\n  user: 'user',\n  unknown: 'unknown'\n};","import { includes } from 'ramda';\nimport {userRoles} from \"lib/enums/roles\";\n\nconst getRole = (authState) => {\n  const currentUserRoles = authState.userProfile['cognito:groups'] || [];\n  \n  const isAdminRole = includes(userRoles.admin, currentUserRoles);\n  \n  if (!authState.isAuthenticated) {\n    return userRoles.unknown;\n  }\n  \n  if (isAdminRole) {\n    return userRoles.admin;\n  }\n\n  \n  return userRoles.user;\n};\n\nexport default getRole;","import React, {useMemo} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport User from './user';\nimport Login from './login';\nimport Admin from './admin';\nimport getRole from './utils/getRole';\nimport {getModuleState} from 'services/auth';\nimport {userRoles} from \"lib/enums/roles\";\n\nfunction Routing(props) {\n  \n  const authState = useSelector(getModuleState);\n  const role = getRole(authState);\n  \n  const Routing = useMemo(() => {\n    switch (role) {\n      case userRoles.unknown:\n        return <Login/>;\n      case userRoles.user:\n        return <User/>;\n      case userRoles.admin:\n        return <Admin/>;\n    }\n  }, [role]);\n  \n  return (\n    <Router>\n      {Routing}\n    </Router>\n  );\n}\n\nexport default Routing;\n","import { combineReducers } from 'redux';\n\nimport { actions as authActions, reducer as authReducer } from 'services/auth';\n\nconst combinedRootReducer = combineReducers({\n  auth: authReducer\n});\n\nfunction rootReducer(state, action) {\n  if (action.type === authActions.logout.toString()) {\n    state = undefined;\n    localStorage.removeItem('persist:auth');\n    sessionStorage.clear();\n  }\n  \n  return combinedRootReducer(state, action);\n}\n\nexport default rootReducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  REHYDRATE,\n  REGISTER,\n  PERSIST,\n  PAUSE,\n  FLUSH,\n  PURGE,\n} from 'redux-persist';\n\nimport reducer from './reducer';\n\n\n//TODO check getDefaultMiddleware function\n\nconst store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n","import './App.css';\nimport Routing from './routing';\nimport store, {persistor} from './store';\nimport {Provider as ReduxProvider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nfunction App() {\n  return (\n    <ReduxProvider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Routing/>\n      </PersistGate>\n    </ReduxProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}